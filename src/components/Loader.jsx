import React from 'react';
import Accordion from "react-bootstrap/Accordion";
import MyTextArea from "./UI/MyTextArea";

const Loader = ({allData}) => {

    const glueOne = (val) => {
        if (typeof val === 'object') {
            return ("(^!^)" + (val.join(",%")));
        } else {
            return val;
        }
    }

    const parseOne = (val) => {
        if (val.length > 4 && val.slice(0, 5) === "(^!^)") {
            return val.slice(5).split(",%");
        } else {
            return val;
        }
    }

    const glue = () => {
        let trash = allData[0].map((a) => glueOne(a))
        return trash.join('!@!');
    }

    const parse = (val) => {
        let mas = val.split("!@!");
        for (let i = 0; i < allData[1].length; i++) {
            allData[1][i](parseOne(mas[i]));
        }
    }



    return (
        <Accordion>
            <Accordion.Item eventKey={"loader"}>
                <Accordion.Header>Загрузка/Сохранение/Сброс:</Accordion.Header>
                <Accordion.Body>
                    <MyTextArea
                        style={{width: "100%", height: "400px", textAlign: "start"}}
                        value = {glue()}
                        onChange={e => {parse(e.target.value)}}
                        placeholder={"Тебе нечего сохранять?"}/>
                    <div>Для сброса:</div>
                    <div>35!@!0!@!(^!^)0,%0,%0,%0,%0,%0!@!(^!^),%,%,%,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0!@!(^!^)0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0,%0!@!1кdiv>
                </Accordion.Body>
            </Accordion.Item>
        </Accordion>
    );
};

export default Loader;